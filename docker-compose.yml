services:
  ##################################################################
  # 1. PostgreSQL
  ##################################################################
  db:
    image: postgres:15
    container_name: suzoo_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  ##################################################################
  # 2. Geth 私有鏈 (Clique PoA)
  ##################################################################
  geth:
    build:
      context: ./geth       # 需含 Dockerfile、init.sh、genesis.json、password.txt
      dockerfile: Dockerfile
    container_name: suzoo_geth
    # 將 ./geth/keystore 與 password.txt 掛載進容器，以便解鎖帳戶
    volumes:
      - ./geth/keystore:/data/keystore
      - ./geth/password.txt:/data/password.txt
    ports:
      - "8545:8545"
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-X",
          "POST",
          "-H",
          "Content-Type: application/json",
          "--data",
          "{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}",
          "http://localhost:8545"
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  ##################################################################
  # 3. IPFS
  ##################################################################
  ipfs:
    build:
      context: ./ipfs       # 需含 Dockerfile
      dockerfile: Dockerfile
    container_name: suzoo_ipfs
    ports:
      - "5001:5001"
    healthcheck:
      test: ["CMD", "ipfs", "id"]
      interval: 10s
      timeout: 5s
      retries: 5

  ##################################################################
  # 4. FastAPI
  ##################################################################
  fastapi:
    build:
      context: ./fastapi    # 需含 Dockerfile、requirements.txt、main.py 等
      dockerfile: Dockerfile
    container_name: suzoo_fastapi
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      geth:
        condition: service_healthy
    environment:
      - BLOCKCHAIN_RPC_URL=${BLOCKCHAIN_RPC_URL}
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8000/health | grep '\"status\":\"ok\"'"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 180s

  ##################################################################
  # 5. Express
  ##################################################################
  express:
    build:
      context: ./express    # 需含 Dockerfile、package.json、server.js 等
      dockerfile: Dockerfile
    container_name: suzoo_express
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      geth:
        condition: service_started
      fastapi:
        condition: service_healthy
    environment:
      - PORT=3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  ##################################################################
  # 6. Crawler (偵測侵權)
  ##################################################################
  crawler:
    build:
      context: ./crawler    # 需含 Dockerfile、package.json、index.js 等
      dockerfile: Dockerfile
    container_name: suzoo_crawler
    depends_on:
      express:
        condition: service_started
    environment:
      - RAPIDAPI_KEY=${RAPIDAPI_KEY}

  ##################################################################
  # 7. 前端 (React/Vue/Angular...)
  ##################################################################
  frontend:
    build:
      context: ./frontend   # 需含 Dockerfile、package.json、src/ 等
      dockerfile: Dockerfile
    container_name: suzoo_frontend
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production

  ##################################################################
  # 8. Nginx (反向代理)
  ##################################################################
  nginx:
    build:
      context: ./nginx      # 需含 Dockerfile、nginx.conf、wait-for-it.sh 等
      dockerfile: Dockerfile
    container_name: suzoo_nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      express:
        condition: service_healthy
      fastapi:
        condition: service_healthy
      frontend:
        condition: service_started
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/wait-for-it.sh:/wait-for-it.sh
