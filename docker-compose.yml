# docker-compose.yml (已移除過時的 version 標籤)

services:
  # Milvus 向量資料庫及其依賴項
  etcd:
    container_name: suzoo_etcd
    image: milvusdb/milvus:v2.4.4 # 【修正】使用正確的映像檔名稱
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    volumes:
      - "${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd"
    networks:
      - suzoo_net

  minio:
    container_name: suzoo_minio
    image: milvusdb/milvus:v2.4.4 # 【修正】使用正確的映像檔名稱
    command: minio server /minio_data
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - "${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data"
    networks:
      - suzoo_net

  milvus:
    container_name: suzoo_milvus
    image: milvusdb/milvus:v2.4.4 # 【修正】使用正確的映像檔名稱
    command: milvus run standalone
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - "${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus"
    ports:
      - "19530:19530" # Milvus
      - "9091:9091"   # Milvus Proxy
    depends_on:
      - etcd
      - minio
    networks:
      - suzoo_net

  # 基礎架構服務
  suzoo_postgres:
    container_name: suzoo_postgres
    image: postgres:15-alpine # 使用官方 postgres 映像檔
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - suzoo_postgres_data:/var/lib/postgresql/data
    networks:
      - suzoo_net
    restart: always

  suzoo_rabbitmq:
    container_name: suzoo_rabbitmq
    image: rabbitmq:3.13-management # 使用官方 rabbitmq 映像檔
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: 123456
    networks:
      - suzoo_net

  suzoo_redis:
    container_name: suzoo_redis
    image: redis:7-alpine # 使用官方 redis 映像檔
    ports:
      - "6379:6379"
    networks:
      - suzoo_net

  suzoo_ipfs:
    container_name: suzoo_ipfs
    image: ipfs/kubo:latest # 使用官方 IPFS/Kubo 映像檔
    ports:
      - "4001:4001" # ipfs swarm
      - "5001:5001" # ipfs api
      - "8080:8080" # ipfs gateway
    networks:
      - suzoo_net

  suzoo_ganache:
    container_name: suzoo_ganache
    image: trufflesuite/ganache:latest # 使用官方 Ganache 映像檔
    ports:
      - "8545:8545"
    networks:
      - suzoo_net

  # 您的應用程式
  suzoo_express:
    container_name: suzoo_express
    build:
      context: .
      dockerfile: Dockerfile # 假設您的 Dockerfile 名稱為 Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env
    volumes:
      - ./express:/app # 將您的 express 目錄掛載到容器中，方便開發
      - ./uploads:/uploads
      - /etc/letsencrypt:/etc/letsencrypt:ro # 掛載 SSL 憑證 (唯讀)
    depends_on:
      - suzoo_postgres
      - suzoo_ipfs
      - suzoo_ganache
      - milvus
    networks:
      - suzoo_net
    restart: always

# 定義網路和資料卷
networks:
  suzoo_net:
    driver: bridge

volumes:
  suzoo_postgres_data:
