############################################################
# 您的最終整合 Docker Compose：
# - Ganache (suzoo_ganache)
# - IPFS (suzoo_ipfs)
# - ETCD (suzoo_etcd)
# - Milvus (suzoo_milvus)
# - RabbitMQ (suzoo_rabbitmq)
# - PostgreSQL (suzoo_postgres)
# - FastAPI (suzoo_fastapi)
# - Express (suzoo_express)
# - Python Vector Service (suzoo_python_vector, FastAPI)
# - Celery Crawler Runner (suzoo_crawler_runner)
# - Nginx Frontend (suzoo_frontend)
############################################################
services:
  # -------------------------------------------------------
  # Ganache
  # -------------------------------------------------------
  suzoo_ganache:
    container_name: suzoo_ganache
    image: trufflesuite/ganache-cli:latest
    command: >
      --noVMErrorsOnRPCResponse
    ports:
      - "8545:8545"
    networks:
      - suzoo_net

  # -------------------------------------------------------
  # IPFS
  # -------------------------------------------------------
  suzoo_ipfs:
    container_name: suzoo_ipfs
    image: ipfs/go-ipfs:latest
    ports:
      - "8080:8080"
      - "5001:5001"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1:5001/api/v0/version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - suzoo_net

  # -------------------------------------------------------
  # ETCD (Milvus dependency)
  # -------------------------------------------------------
  suzoo_etcd:
    container_name: suzoo_etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_ADVERTISE_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
    ports:
      - "2379:2379"
      - "2380:2380"
    networks:
      - suzoo_net

  # -------------------------------------------------------
  # Milvus
  # -------------------------------------------------------
  suzoo_milvus:
    container_name: suzoo_milvus
    image: milvusdb/milvus:v2.3.11
    ports:
      - "19530:19530"
      - "19121:19121"
    depends_on:
      - suzoo_etcd
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - suzoo_net

  # -------------------------------------------------------
  # RabbitMQ
  # -------------------------------------------------------
  suzoo_rabbitmq:
    container_name: suzoo_rabbitmq
    image: rabbitmq:3.11-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - suzoo_net

  # -------------------------------------------------------
  # PostgreSQL
  # -------------------------------------------------------
  suzoo_postgres:
    container_name: suzoo_postgres
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - suzoo_net

  # -------------------------------------------------------
  # FastAPI (後端服務 1)
  # -------------------------------------------------------
  suzoo_fastapi:
    container_name: suzoo_fastapi
    image: soozookaizokuhunter-suzoo_fastapi
    # 若您想本地 build => build: { context: ./fastapi, dockerfile: Dockerfile }
    ports:
      - "8000:8000"
    depends_on:
      - suzoo_postgres
    networks:
      - suzoo_net

  # -------------------------------------------------------
  # Express (後端服務 2)
  # -------------------------------------------------------
  suzoo_express:
    container_name: suzoo_express
    image: soozookaizokuhunter-suzoo_express
    # build:
    #   context: ./express
    #   dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - suzoo_postgres
    networks:
      - suzoo_net

  # -------------------------------------------------------
  # Python Vector Service (FastAPI, 向量檢索)
  # -------------------------------------------------------
  suzoo_python_vector:
    container_name: suzoo_python_vector
    # 若您要自行 build:
    #   build:
    #     context: ./python-vector-service
    #     dockerfile: Dockerfile
    image: soozookaizokuhunter-suzoo_python_vector
    ports:
      - "8001:8000"
    depends_on:
      - suzoo_milvus
      - suzoo_rabbitmq
    environment:
      - MILVUS_HOST=suzoo_milvus
      - MILVUS_PORT=19530
      - BROKER_URL=amqp://admin:admin@suzoo_rabbitmq:5672//
      - RESULT_BACKEND=rpc://
    networks:
      - suzoo_net

  # -------------------------------------------------------
  # Crawler Runner (Celery Worker)
  # -------------------------------------------------------
  suzoo_crawler_runner:
    container_name: suzoo_crawler_runner
    # 若您要自行 build:
    #   build:
    #     context: ./python_crawlers
    #     dockerfile: Dockerfile
    image: soozookaizokuhunter-suzoo_crawler_runner
    depends_on:
      - suzoo_rabbitmq
      - suzoo_python_vector
    environment:
      - BROKER_URL=amqp://admin:admin@suzoo_rabbitmq:5672//
      - RESULT_BACKEND=rpc://
      - API_BASE=http://suzoo_python_vector:8000
      - DB_PATH=/app/sqlite_db/sources.db
    networks:
      - suzoo_net

  # -------------------------------------------------------
  # Nginx Frontend
  # -------------------------------------------------------
  suzoo_frontend:
    container_name: suzoo_frontend
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - suzoo_express
      - suzoo_fastapi
    volumes:
      # ---- 以下兩行重點：同時掛載您現有的 2 個 suzoo.conf ----
      # 1) ./nginx/suzoo.conf => /etc/nginx/conf.d/suzoo.conf
      - ./nginx/suzoo.conf:/etc/nginx/conf.d/suzoo.conf
      # 2) ./frontend/suzoo.conf => /etc/nginx/conf.d/suzoo_frontend.conf
      - ./frontend/suzoo.conf:/etc/nginx/conf.d/suzoo_frontend.conf

      # 如果您還有 certs 目錄:
      # - /etc/letsencrypt:/etc/nginx/certs:ro
    networks:
      - suzoo_net

volumes:
  postgres_data:

networks:
  suzoo_net:
    driver: bridge
