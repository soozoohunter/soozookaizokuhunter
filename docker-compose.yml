# docker-compose.yml (最終黃金版 - 包含所有服務)
version: '3.8'

networks:
  suzoo-network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:
  ipfs_data:

services:
  # 1. 前端網頁伺服器 (Nginx)
  suzoo_frontend:
    container_name: suzoo_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./uploads:/usr/share/nginx/html/uploads:ro
    networks:
      - suzoo-network
    depends_on:
      suzoo_express:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: always

  # 2. 核心後端服務 (Node.js)
  suzoo_express:
    container_name: suzoo_express
    build:
      context: ./express
      dockerfile: Dockerfile
    command: node server.js
    ports:
      - "3000:3000"
    env_file: .env
    volumes:
      - ./express:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - ./credentials:/app/credentials:ro
    depends_on:
      suzoo_postgres:
        condition: service_healthy
      suzoo_rabbitmq:
        condition: service_healthy
    networks:
      - suzoo-network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:3000/health"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 60s
    restart: always

  # 3. 背景任務工人 (Node.js Worker)
  suzoo_worker:
    container_name: suzoo_worker
    build:
      context: ./express
      dockerfile: Dockerfile
    command: node worker.js
    env_file: .env
    volumes:
      - ./express:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - ./credentials:/app/credentials:ro
    depends_on:
      suzoo_express:
        condition: service_healthy
    networks:
      - suzoo-network
    restart: always

  # 4. 資料庫 (PostgreSQL)
  suzoo_postgres:
    container_name: suzoo_postgres
    image: postgres:15-alpine
    ports: ["5432:5432"]
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - suzoo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  # 5. 訊息佇列 (RabbitMQ)
  suzoo_rabbitmq:
    container_name: suzoo_rabbitmq
    image: rabbitmq:3.13-management
    ports: ["5672:5672", "15672:15672"]
    env_file: .env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - suzoo-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  # 6. 快取資料庫 (Redis)
  suzoo_redis:
    container_name: suzoo_redis
    image: redis:7-alpine
    ports: ["6379:6379"]
    volumes:
      - redis_data:/data
    networks:
      - suzoo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always

  # 7. 星際檔案系統 (IPFS)
  suzoo_ipfs:
    container_name: suzoo_ipfs
    image: ipfs/kubo:v0.28.0
    ports: ["5001:5001", "8080:8080"]
    volumes:
      - ipfs_data:/data/ipfs
    networks:
      - suzoo-network
    healthcheck:
      test: ["CMD-SHELL", "ipfs id || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  # 8. 本地區塊鏈 (Ganache)
  suzoo_ganache:
    container_name: suzoo_ganache
    image: trufflesuite/ganache:latest
    command: ["--host", "0.0.0.0", "--wallet.accounts", "${BLOCKCHAIN_PRIVATE_KEY},1000000000000000000000"]
    env_file: .env
    ports: ["8545:8545"]
    networks:
      - suzoo-network
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 8545 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: always

  # 9. AI/ML 後端服務 (Python/FastAPI)
  suzoo_fastapi:
    container_name: suzoo_fastapi
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    ports: ["8000:8000"]
    env_file: .env
    volumes:
      - ./fastapi:/app
    networks:
      - suzoo-network
    depends_on:
      suzoo_postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
