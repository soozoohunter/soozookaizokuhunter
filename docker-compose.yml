# docker-compose.yml (包含 frontend 的完整最終版 by Gemini)
# 版本: 3.0
# 日期: 2025-06-25
# 描述:
# 1. [核心修正] 新增 suzoo_frontend 服務的完整定義，使其能被啟動並監聽 80/443 端口。
# 2. 修正 Milvus 映像檔標籤。
# 3. 修正 suzoo_express 的 build context。

networks:
  suzoo-network:
    driver: bridge

services:
  # -------------------------------------
  # 前端網頁伺服器 (Nginx)
  # -------------------------------------
  suzoo_frontend:
    container_name: suzoo_frontend
    build:
      context: ./frontend # 指向 frontend 目錄
      dockerfile: Dockerfile
    ports:
      - "80:80"   # HTTP
      - "443:443" # HTTPS
    volumes:
      # 將 SSL 憑證以唯讀模式掛載給 Nginx 使用
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - suzoo-network
    depends_on:
      - suzoo_express
      - suzoo_fastapi
    restart: always
    logging: &default-logging
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # -------------------------------------
  # 核心後端服務 (Node.js)
  # -------------------------------------
  suzoo_express:
    container_name: suzoo_express
    build:
      context: ./express
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PHONE=${ADMIN_PHONE}
      - ADMIN_PASS=${ADMIN_PASS}
    volumes:
      - ./express:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      suzoo_postgres:
        condition: service_healthy
      suzoo_ipfs:
        condition: service_healthy
      milvus:
        condition: service_started
      suzoo_ganache:
        condition: service_started
    networks:
      - suzoo-network
    restart: always
    logging: *default-logging

  # -------------------------------------
  # AI/ML 後端服務 (Python/FastAPI)
  # -------------------------------------
  suzoo_fastapi:
    container_name: suzoo_fastapi
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./fastapi:/app
    networks:
      - suzoo-network
    depends_on:
      - suzoo_postgres
      - milvus
      - suzoo_ipfs
      - suzoo_ganache
    restart: always
    logging: *default-logging

  # -------------------------------------
  # 向量資料庫 Milvus (獨立模式)
  # -------------------------------------
  milvus:
    container_name: suzoo_milvus
    image: milvusdb/milvus:v2.4.4
    command: ["milvus", "run", "standalone"]
    ports:
      - "19530:19530"
      - "9091:9091"
    volumes:
      - milvus_data:/var/lib/milvus
    networks:
      - suzoo-network
    restart: always
    logging: *default-logging

  # -------------------------------------
  # 基礎架構服務
  # -------------------------------------
  suzoo_postgres:
    container_name: suzoo_postgres
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - suzoo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    logging: *default-logging

  suzoo_rabbitmq:
    container_name: suzoo_rabbitmq
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - suzoo-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always
    logging: *default-logging

  suzoo_redis:
    container_name: suzoo_redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - suzoo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always
    logging: *default-logging

  suzoo_ipfs:
    container_name: suzoo_ipfs
    image: ipfs/kubo:latest
    ports:
      - "5001:5001"
      - "8080:8080"
    volumes:
      - ipfs_data:/data/ipfs
    networks:
      - suzoo-network
    healthcheck:
      test: ["CMD", "ipfs", "id"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    logging: *default-logging

  suzoo_ganache:
    container_name: suzoo_ganache
    image: trufflesuite/ganache:latest
    command: >
      sh -c "ganache-cli --host 0.0.0.0 --port 8545 --account=${BLOCKCHAIN_PRIVATE_KEY},100000000000000000000 --defaultBalanceEther 100"
    env_file:
      - .env
    ports:
      - "8545:8545"
    networks:
      - suzoo-network
    restart: always
    logging: *default-logging

# -------------------------------------
# 命名掛載卷 (Named Volumes)
# -------------------------------------
volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:
  ipfs_data:
  milvus_data:
