services:
  #################################
  # Ganache (區塊鏈)
  #################################
  suzoo_ganache:
    container_name: suzoo_ganache
    image: trufflesuite/ganache-cli:latest
    ports:
      - "8545:8545"
    command: >
      --noVMErrorsOnRPCResponse
    networks:
      - suzoo_net

  #################################
  # IPFS
  #################################
  suzoo_ipfs:
    container_name: suzoo_ipfs
    image: ipfs/go-ipfs:latest
    ports:
      - "8080:8080"
      - "5001:5001"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1:5001/api/v0/version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - suzoo_net

  #################################
  # etcd (for Milvus)
  #################################
  suzoo_etcd:
    container_name: suzoo_etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_ADVERTISE_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
    ports:
      - "2379:2379"
      - "2380:2380"
    networks:
      - suzoo_net

  #################################
  # Milvus
  #################################
  suzoo_milvus:
    container_name: suzoo_milvus
    image: milvusdb/milvus:v2.3.11
    ports:
      - "19530:19530"
      - "19121:19121"
    depends_on:
      - suzoo_etcd
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - suzoo_net

  #################################
  # RabbitMQ (Celery Broker)
  #################################
  suzoo_rabbitmq:
    container_name: suzoo_rabbitmq
    image: rabbitmq:3.11-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - suzoo_net

  #################################
  # PostgreSQL
  #################################
  suzoo_postgres:
    container_name: suzoo_postgres
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - suzoo_net

  #################################
  # FastAPI (可選)
  #################################
  suzoo_fastapi:
    container_name: suzoo_fastapi
    image: soozookaizokuhunter-suzoo_fastapi
    # 如需自行建置可改用:
    # build:
    #   context: ./fastapi
    #   dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - suzoo_postgres
    networks:
      - suzoo_net

  #################################
  # Express
  #################################
  suzoo_express:
    container_name: suzoo_express
    image: soozookaizokuhunter-suzoo_express
    # 如需自行建置可改:
    # build:
    #   context: ./express
    #   dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - suzoo_postgres
    networks:
      - suzoo_net

  #################################
  # Python Vector Service
  #################################
  suzoo_python_vector:
    container_name: suzoo_python_vector
    image: soozookaizokuhunter-suzoo_python_vector
    # 或 build:
    #   context: ./python-vector-service
    #   dockerfile: Dockerfile
    ports:
      - "8001:8000"
    depends_on:
      - suzoo_milvus
    networks:
      - suzoo_net

  #################################
  # Crawler Runner (Celery Worker)
  #################################
  suzoo_crawler_runner:
    container_name: suzoo_crawler_runner
    image: soozookaizokuhunter-suzoo_crawler_runner
    # 或 build:
    #   context: ./python_crawlers
    #   dockerfile: Dockerfile.python
    depends_on:
      - suzoo_rabbitmq
    networks:
      - suzoo_net

  #################################
  # Frontend (Nginx)
  #################################
  suzoo_frontend:
    container_name: suzoo_frontend
    image: nginx:alpine
    # 開放 80, 443
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - suzoo_express
      - suzoo_fastapi
    # 掛載 suzoo.conf 到 /etc/nginx/conf.d/suzoo.conf
    # 另外移除 container 內 default.conf
    volumes:
      - ./suzoo.conf:/etc/nginx/conf.d/suzoo.conf
    command: >
      /bin/sh -c "rm -f /etc/nginx/conf.d/default.conf &&
                  nginx -g 'daemon off;'"
    networks:
      - suzoo_net

volumes:
  postgres_data:

networks:
  suzoo_net:
    driver: bridge
