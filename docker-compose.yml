version: '3.8'

services:
  # 1. PostgreSQL
  db:
    image: postgres:15
    container_name: suzoo_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - suzoo_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 2. 以太坊私有鏈 (Geth) - 修正路徑與健康檢查
  geth:
    build: ./geth
    container_name: suzoo_geth
    networks:
      - suzoo_net
    ports:
      - "8545:8545"
      - "30303:30303"
      - "30303:30303/udp"
    volumes:
      - geth_data:/home/ethereum/data  # 路徑修正
    healthcheck:  # 新增健康檢查
      test: ["CMD", "curl", "-f", "http://localhost:8545"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  # 3. IPFS - 改用正確鏡像名稱
  ipfs:
    image: ipfs/kubo:latest  # 直接使用官方鏡像，無需 build
    container_name: suzoo_ipfs
    networks:
      - suzoo_net
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"
    volumes:
      - ipfs_data:/data/ipfs
    command: daemon --migrate=true --enable-pubsub-experiment  # 必要參數

  # 4. Express - 依賴於健康狀態
  express:
    build: ./express
    container_name: suzoo_express
    depends_on:
      db:
        condition: service_healthy
      geth:
        condition: service_healthy  # 改為依賴健康狀態
      ipfs:
        condition: service_started
    env_file:
      - .env
    networks:
      - suzoo_net

  # 5. FastAPI - 依賴於健康狀態
  fastapi:
    build: ./fastapi
    container_name: suzoo_fastapi
    depends_on:
      db:
        condition: service_healthy
      geth:
        condition: service_healthy  # 改為依賴健康狀態
      ipfs:
        condition: service_started
    env_file:
      - .env
    networks:
      - suzoo_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 6. Crawler (Puppeteer) - 明確指定 Node 版本
  crawler:
    build: 
      context: ./crawler
      dockerfile: Dockerfile  # 確保內有 FROM node:18
    container_name: suzoo_crawler
    env_file:
      - .env
    networks:
      - suzoo_net

  # 7. Frontend (React) - 修正構建設定
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile  # 確保基礎鏡像正確
    container_name: suzoo_frontend
    env_file:
      - .env
    networks:
      - suzoo_net

  # 8. NGINX - 使用 Alpine 版本並修正配置
  nginx:
    image: nginx:alpine  # 直接使用官方鏡像
    container_name: suzoo_nginx
    depends_on:
      - frontend
      - express
      - fastapi
      - crawler
    ports:
      - "80:80"
      - "443:443"
    networks:
      - suzoo_net
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro  # 掛載自訂配置
      - /etc/letsencrypt:/etc/letsencrypt:ro

volumes:
  db_data:
  geth_data:  # 自動映射到 /home/ethereum/data
  ipfs_data:

networks:
  suzoo_net:
    driver: bridge
