services:
  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  ganache:
    image: trufflesuite/ganache-cli:latest
    command: ganache-cli -h 0.0.0.0 -p 8545 -m "${GANACHE_MNEMONIC}" --db /data
    volumes:
      - ganache_data:/data
    ports:
      - "8545:8545"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8545 >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 5

  ipfs:
    image: ipfs/go-ipfs:latest
    volumes:
      - ipfs_data:/data/ipfs
    ports:
      - "4001:4001"   # Swarm port
      - "5001:5001"   # API port
      - "8080:8080"   # Gateway port
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:5001/api/v0/version"]
      interval: 30s
      timeout: 5s
      retries: 5

  express:
    build: ./express
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      ganache:
        condition: service_started
      ipfs:
        condition: service_healthy
      fastapi:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 5

  fastapi:
    build: ./fastapi
    env_file: .env
    depends_on:
      ipfs:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 5

  nginx:
    build: ./frontend   # This Dockerfile will handle building the React app and Nginx
    depends_on:
      express:
        condition: service_healthy
      fastapi:
        condition: service_healthy
    ports:
      - "80:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1/"]
      interval: 30s
      timeout: 5s
      retries: 5

volumes:
  db_data:
  ipfs_data:
  ganache_data:
