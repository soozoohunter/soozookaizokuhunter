services:
  ####################################################################
  # 1) PostgreSQL
  ####################################################################
  suzoo_postgres:
    image: postgres:15-alpine
    container_name: suzoo_postgres
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - suzoo_db_data:/var/lib/postgresql/data
    networks:
      - suzoo_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -h localhost"]
      interval: 5s
      retries: 5

  ####################################################################
  # 2) Ganache (ETH)
  ####################################################################
  suzoo_ganache:
    image: trufflesuite/ganache-cli:latest
    container_name: suzoo_ganache
    command: >
      ganache-cli
      --host 0.0.0.0
      --port 8545
      --accounts 5
      --defaultBalanceEther 100
    ports:
      - "8545:8545"
    networks:
      - suzoo_net
    volumes:
      - suzoo_ganache_data:/data

  ####################################################################
  # 3) IPFS (Kubo)
  ####################################################################
  suzoo_ipfs:
    image: ipfs/go-ipfs:latest
    container_name: suzoo_ipfs
    command: daemon
    ports:
      - "5001:5001"
      - "8080:8080"
    volumes:
      - suzoo_ipfs_data:/data/ipfs
    networks:
      - suzoo_net

  ####################################################################
  # 4) FastAPI (Python)
  ####################################################################
  suzoo_fastapi:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    container_name: suzoo_fastapi
    depends_on:
      - suzoo_postgres
      - suzoo_ganache
      - suzoo_ipfs
    env_file:
      - .env
    expose:
      - "8000"
    networks:
      - suzoo_net

  ####################################################################
  # 5) Express (Node.js)
  ####################################################################
  suzoo_express:
    build:
      context: ./express
      dockerfile: Dockerfile
    container_name: suzoo_express
    depends_on:
      - suzoo_postgres
      - suzoo_ganache
      - suzoo_ipfs
      - suzoo_fastapi
    env_file:
      - .env
    expose:
      - "3000"
    networks:
      - suzoo_net

  ####################################################################
  # 6) React (前端)
  ####################################################################
  suzoo_react:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: suzoo_react
    depends_on:
      - suzoo_express
      - suzoo_fastapi
    env_file:
      - .env
    expose:
      - "3000"
    # 若您想透過 http://HOST:3001 直接查看 React dev
    ports:
      - "3001:3000"
    networks:
      - suzoo_net

  ####################################################################
  # 7) Nginx (對外)
  ####################################################################
  suzoo_nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: suzoo_nginx
    depends_on:
      - suzoo_react
      - suzoo_express
      - suzoo_fastapi
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # 將您自訂的 Nginx 組態掛載進容器
      - ./nginx/suzoo.conf:/etc/nginx/conf.d/suzoo.conf:ro
      # 掛載 Let's Encrypt 憑證 (需確保宿主機該路徑存在)
      - /etc/letsencrypt/live/suzookaizokuhunter.com:/etc/letsencrypt/live/suzookaizokuhunter.com:ro
    networks:
      - suzoo_net
    restart: unless-stopped

######################################################################
# Docker networks & volumes
######################################################################
networks:
  suzoo_net:
    driver: bridge

volumes:
  suzoo_db_data:
  suzoo_ipfs_data:
  suzoo_ganache_data:
