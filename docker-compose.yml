services:
  # -------------------
  # 1) PostgreSQL
  # -------------------
  suzoo_postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - suzoo_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      retries: 5
    networks:
      - suzoo_net

  # -------------------
  # 2) Ganache
  # -------------------
  suzoo_ganache:
    image: trufflesuite/ganache-cli:latest
    command: ganache-cli --host 0.0.0.0 --port 8545 --accounts 5 --defaultBalanceEther 100
    ports:
      - "8545:8545"
    networks:
      - suzoo_net

  # -------------------
  # 3) IPFS
  # -------------------
  suzoo_ipfs:
    image: ipfs/go-ipfs:latest
    ports:
      - "5001:5001"
      - "8080:8080"
    volumes:
      - suzoo_ipfs_data:/data/ipfs
    command: daemon
    networks:
      - suzoo_net

  # -------------------
  # 4) FastAPI
  # -------------------
  suzoo_fastapi:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    depends_on:
      - suzoo_ganache
      - suzoo_ipfs
    env_file:
      - .env
    expose:
      - "8000"
    networks:
      - suzoo_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # -------------------
  # 5) Express
  # -------------------
  suzoo_express:
    build:
      context: ./express
      dockerfile: Dockerfile
    depends_on:
      - suzoo_postgres
      - suzoo_ganache
      - suzoo_ipfs
      - suzoo_fastapi
    env_file:
      - .env
    expose:
      - "3000"
    networks:
      - suzoo_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # -------------------
  # 6) Crawler
  # -------------------
  suzoo_crawler:
    build:
      context: ./crawler
      dockerfile: Dockerfile
    depends_on:
      - suzoo_express
      - suzoo_postgres
    env_file:
      - .env
    networks:
      - suzoo_net
    expose:
      - "8081"

  # -------------------
  # 7) React 前端
  # -------------------
  suzoo_react:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - suzoo_express
      - suzoo_fastapi
    env_file:
      - .env
    expose:
      - "3000"
    networks:
      - suzoo_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # -------------------
  # 8) Nginx
  # -------------------
  suzoo_nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    depends_on:
      - suzoo_react
      - suzoo_express
      - suzoo_fastapi
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      # 若您有 Let's Encrypt 憑證掛載路徑，可在此加:
      # - /path/to/certs:/etc/letsencrypt:ro
    restart: unless-stopped
    networks:
      - suzoo_net

# -------------------
# Network & Volumes
# -------------------
networks:
  suzoo_net:
    driver: bridge

volumes:
  suzoo_db_data:
  suzoo_ipfs_data:
