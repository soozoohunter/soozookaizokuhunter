services:
  db:
    image: postgres:15
    container_name: suzoo_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - suzoo_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  geth:
    build: ./geth
    container_name: suzoo_geth
    networks:
      - suzoo_net
    ports:
      - "8545:8545"  # RPC
    volumes:
      - geth_data:/root/.ethereum
    # 注意：請確保 geth/Dockerfile 裡的 CMD 只有參數，沒有重複 "geth" 單字

  ipfs:
    build: ./ipfs
    container_name: suzoo_ipfs
    networks:
      - suzoo_net
    ports:
      - "5001:5001"   # IPFS API
      - "8080:8080"   # IPFS Gateway
    volumes:
      - ipfs_data:/data/ipfs

  express:
    build: ./express
    container_name: suzoo_express
    depends_on:
      db:
        condition: service_healthy
      geth:
        condition: service_started
      ipfs:
        condition: service_started
    env_file:
      - .env
    networks:
      - suzoo_net
    # 前端統一由 Nginx 代理 => 不需要暴露 3000:3000

  fastapi:
    build: ./fastapi
    container_name: suzoo_fastapi
    depends_on:
      db:
        condition: service_healthy
      geth:
        condition: service_started
      ipfs:
        condition: service_started
    env_file:
      - .env
    networks:
      - suzoo_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    # 同理，FastAPI 由 Nginx 代理 => 無需對外開放 port

  crawler:
    build: ./crawler
    container_name: suzoo_crawler
    env_file:
      - .env
    networks:
      - suzoo_net
    # 若爬蟲只在內部呼叫 => 不需要對外暴露 8081:8081

  frontend:
    build: ./frontend
    container_name: suzoo_frontend
    networks:
      - suzoo_net
    # React前端 => Nginx 代理 => 無需 ports

  nginx:
    build: ./nginx
    container_name: suzoo_nginx
    depends_on:
      frontend:
        condition: service_started
      express:
        condition: service_started
      fastapi:
        condition: service_healthy
      crawler:
        condition: service_started
    networks:
      - suzoo_net
    ports:
      - "80:80"
    # 正式環境 SSL => 取消註解以下內容
    # volumes:
    #   - /etc/letsencrypt:/etc/letsencrypt:ro
    # ports:
    #   - "443:443"

volumes:
  db_data:
  geth_data:
  ipfs_data:

networks:
  suzoo_net:
    driver: bridge
