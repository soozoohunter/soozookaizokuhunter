networks:
  suzoo-network:
    driver: bridge

services:
  # -------------------------------------
  # 前端網頁伺服器 (Nginx)
  # -------------------------------------
  suzoo_frontend:
    container_name: suzoo_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - suzoo-network
    depends_on:
      suzoo_express:
        condition: service_healthy
      suzoo_fastapi:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f --insecure https://localhost || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # -------------------------------------
  # 核心後端服務 (Node.js)
  # -------------------------------------
  suzoo_express:
    container_name: suzoo_express
    build:
      context: ./express
      dockerfile: Dockerfile
    command: node server.js
    ports:
      - "3000:3000"
    env_file:
      - .env
    volumes:
      - ./express:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - ./credentials:/app/credentials:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      suzoo_postgres:
        condition: service_healthy
      suzoo_rabbitmq:
        condition: service_healthy
      suzoo_ipfs:
        condition: service_healthy
      suzoo_ganache:
        condition: service_healthy
      suzoo_fastapi:
        condition: service_healthy
      milvus:
        condition: service_healthy
    networks:
      - suzoo-network
    dns:
      - 8.8.8.8
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:3000/health"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 60s
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ----------------------------------------------------
  # 背景任務工人 (Node.js Background Worker)
  # ----------------------------------------------------
  suzoo_worker:
    container_name: suzoo_worker
    build:
      context: ./express
      dockerfile: Dockerfile
    command: node worker.js
    env_file:
      - .env
    volumes:
      - ./express:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - ./credentials:/app/credentials:ro
    depends_on:
      suzoo_postgres:
        condition: service_healthy
      suzoo_rabbitmq:
        condition: service_healthy
      suzoo_ipfs:
        condition: service_healthy
      suzoo_ganache:
        condition: service_healthy
      suzoo_fastapi:
        condition: service_healthy
      milvus:
        condition: service_healthy
    networks:
      - suzoo-network
    dns:
      - 8.8.8.8
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # -------------------------------------
  # AI/ML 後端服務 (Python/FastAPI)
  # -------------------------------------
  suzoo_fastapi:
    container_name: suzoo_fastapi
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./fastapi:/app
    networks:
      - suzoo-network
    depends_on:
      suzoo_postgres:
        condition: service_healthy
      suzoo_ipfs:
        condition: service_healthy
      suzoo_ganache:
        condition: service_healthy
      milvus:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # -------------------------------------
  # 向量資料庫 Milvus (獨立模式)
  # -------------------------------------
  milvus:
    container_name: suzoo_milvus
    image: milvusdb/milvus:v2.3.16
    command: ["/bin/sh", "/start_milvus.sh"]
    ports:
      - "19530:19530"
      - "9091:9091"
    shm_size: '2gb'
    volumes:
      - milvus_data:/var/lib/milvus
      - ./scripts/start_milvus.sh:/start_milvus.sh:ro
    networks:
      - suzoo-network
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: suzoo_minio:9000
      ETCD_ROOT_PATH: ${ETCD_ROOT_PATH}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
    depends_on:
      suzoo_minio:
        condition: service_healthy
      etcd:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:9091/healthz"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # -------------------------------------
  # ETCD (for Milvus)
  # -------------------------------------
  etcd:
    container_name: suzoo_etcd
    image: bitnami/etcd:3.5
    ports:
      - "2379:2379"
    volumes:
      - etcd_data:/bitnami/etcd
    networks:
      - suzoo-network
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # -------------------------------------
  # MinIO (Object Storage for Milvus)
  # -------------------------------------
  suzoo_minio:
    container_name: suzoo_minio
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
    volumes:
      - minio_data:/data
      - ./scripts/create_bucket.sh:/docker-entrypoint-init.d/create_bucket.sh
    networks:
      - suzoo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # -------------------------------------
  # 基礎架構服務
  # -------------------------------------
  suzoo_postgres:
    container_name: suzoo_postgres
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - suzoo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  suzoo_rabbitmq:
    container_name: suzoo_rabbitmq
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - suzoo-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  suzoo_redis:
    container_name: suzoo_redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - suzoo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  suzoo_ipfs:
    container_name: suzoo_ipfs
    image: ipfs/kubo:v0.28.0
    user: ipfs
    ports:
      - "5001:5001"
      - "8080:8080"
    volumes:
      - ipfs_data:/data/ipfs
    networks:
      - suzoo-network
    healthcheck:
      test: ["CMD-SHELL", "ipfs id || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  suzoo_ganache:
    container_name: suzoo_ganache
    image: trufflesuite/ganache:latest
    command:
      - "--host"
      - "0.0.0.0"
      - "--wallet.accounts"
      - "${BLOCKCHAIN_PRIVATE_KEY},1000000000000000000000"
    env_file:
      - .env
    ports:
      - "8545:8545"
    networks:
      - suzoo-network
    healthcheck:
      test: >
        node -e "const http = require('http');
        const options = { host: 'localhost', port: 8545, method: 'POST', headers: { 'Content-Type': 'application/json' } };
        const req = http.request(options, (res) => { process.exit(res.statusCode === 200 ? 0 : 1); });
        req.on('error', () => process.exit(1));
        req.write('{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\":[],\"id\":1}');
        req.end();"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:
  ipfs_data:
  milvus_data:
  etcd_data:
  minio_data:
