services:
  suzoo_postgres:
    container_name: suzoo_postgres
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - suzoo_net
    restart: unless-stopped

  suzoo_express:
    container_name: suzoo_express
    build:
      context: ./express
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      IPFS_API_URL: ${IPFS_API_URL}
      BLOCKCHAIN_RPC_URL: ${BLOCKCHAIN_RPC_URL}
      BLOCKCHAIN_PRIVATE_KEY: ${BLOCKCHAIN_PRIVATE_KEY}
      CONTRACT_ADDRESS: ${CONTRACT_ADDRESS}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      FASTAPI_URL: ${FASTAPI_URL}
      MILVUS_HOST: ${MILVUS_HOST}
      MILVUS_PORT: ${MILVUS_PORT}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_SECURE: ${SMTP_SECURE}
      EMAIL_FROM: ${EMAIL_FROM}
    depends_on:
      - suzoo_postgres
      - suzoo_ipfs
      - suzoo_ganache
      - suzoo_milvus
    ports:
      - "3000:3000"
    networks:
      - suzoo_net
    restart: unless-stopped

  suzoo_frontend:
    container_name: suzoo_frontend
    image: nginx:alpine
    depends_on:
      - suzoo_express
      - suzoo_fastapi
    ports:
      - "80:80"
    volumes:
      - ./nginx/suzoo.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/build:/usr/share/nginx/html:ro
    command: ["nginx", "-g", "daemon off;"]
    networks:
      - suzoo_net
    restart: unless-stopped

  suzoo_fastapi:
    container_name: suzoo_fastapi
    image: soozookaizokuhunter-suzoo_fastapi
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - suzoo_postgres
    ports:
      - "8000:8000"
    networks:
      - suzoo_net
    restart: unless-stopped

  suzoo_ganache:
    container_name: suzoo_ganache
    image: trufflesuite/ganache-cli:latest
    command: "--noVMErrorsOnRPCResponse"
    ports:
      - "8545:8545"
    networks:
      - suzoo_net
    restart: unless-stopped

  suzoo_ipfs:
    container_name: suzoo_ipfs
    image: ipfs/go-ipfs:latest
    ports:
      - "8080:8080"
      - "5001:5001"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1:5001/api/v0/version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - suzoo_net
    restart: unless-stopped

  suzoo_etcd:
    container_name: suzoo_etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      ETCD_ADVERTISE_CLIENT_URLS: http://0.0.0.0:2379
      ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
    ports:
      - "2379:2379"
    networks:
      - suzoo_net
    restart: unless-stopped

  suzoo_minio:
    container_name: suzoo_minio
    image: minio/minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    entrypoint: >
      sh -c "
      mkdir -p /data/a-bucket &&
      minio server /data --console-address ':9001'"
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - suzoo_net
    restart: unless-stopped

  suzoo_milvus:
    container_name: suzoo_milvus
    image: milvusdb/milvus:v2.3.11
    depends_on:
      - suzoo_etcd
      - suzoo_minio
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: "suzoo_etcd:2379"
      MINIO_ADDRESS: "http://suzoo_minio:9000"
      MINIO_ACCESS_KEY_ID: "admin"
      MINIO_SECRET_ACCESS_KEY: "admin123"
      MINIO_USE_SSL: "false"
      MINIO_BUCKET_NAME: "a-bucket"
    ports:
      - "19530:19530"
      - "19121:19121"
    networks:
      - suzoo_net
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  suzoo_net:
    driver: bridge
