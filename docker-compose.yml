# 已移除 version 聲明 (新版本不再需要)
services:
  db:
    image: postgres:15
    container_name: suzoo_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - suzoo_net
    healthcheck:  # 添加健康檢查
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  geth:
    build: ./geth
    container_name: suzoo_geth
    networks:
      - suzoo_net
    ports:
      - "8545:8545"  # 只保留必要 RPC 端口
    volumes:
      - geth_data:/root/.ethereum
    # 移除多餘端口 (30303 用於 P2P，容器間不需要映射)
    # 確保 geth/Dockerfile 的 CMD 沒有重複 "geth" 前綴

  ipfs:
    build: ./ipfs
    container_name: suzoo_ipfs
    networks:
      - suzoo_net
    ports:
      - "5001:5001"  # 只暴露必要 API 端口
      - "8080:8080"  # 閘道器端口
    volumes:
      - ipfs_data:/data/ipfs

  express:
    build: ./express
    container_name: suzoo_express
    depends_on:
      db:
        condition: service_healthy  # 嚴格依賴檢查
      geth:
        condition: service_started
      ipfs:
        condition: service_started
    env_file:
      - .env
    networks:
      - suzoo_net
    # 移除 ports:3000 (統一由 Nginx 代理)

  fastapi:
    build: ./fastapi
    container_name: suzoo_fastapi
    depends_on:
      db:
        condition: service_healthy
      geth:
        condition: service_started
      ipfs:
        condition: service_started
    env_file:
      - .env
    networks:
      - suzoo_net
    # 添加健康檢查
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  crawler:
    build: ./crawler
    container_name: suzoo_crawler
    env_file:
      - .env
    networks:
      - suzoo_net
    # 移除 ports:8081 (內部服務不需暴露)

  frontend:
    build: ./frontend
    container_name: suzoo_frontend
    networks:
      - suzoo_net
    # 移除 ports:3001 (由 Nginx 代理)

  nginx:
    build: ./nginx
    container_name: suzoo_nginx
    depends_on:
      frontend:
        condition: service_started
      express:
        condition: service_started
      fastapi:
        condition: service_healthy  # 嚴格依賴檢查
      crawler:
        condition: service_started
    networks:
      - suzoo_net
    ports:
      - "80:80"  # 正式環境再啟用 443
    # 正式環境取消註解以下內容
    # volumes:
    #   - /etc/letsencrypt:/etc/letsencrypt:ro
    # ports:
    #   - "80:80"
    #   - "443:443"

volumes:
  db_data:
  geth_data:
  ipfs_data:

networks:
  suzoo_net:
    driver: bridge
