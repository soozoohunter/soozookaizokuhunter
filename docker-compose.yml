services:
  postgres:
    image: postgres:15-alpine
    container_name: suzoo_postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      retries: 5
    networks:
      - suzoo_net

  ganache:
    image: trufflesuite/ganache-cli:latest
    container_name: suzoo_ganache
    command: ganache-cli --host 0.0.0.0 --port 8545 --accounts 5 --defaultBalanceEther 100
    ports:
      - "8545:8545"
    networks:
      - suzoo_net

  ipfs:
    image: ipfs/go-ipfs:latest
    container_name: suzoo_ipfs
    ports:
      - "5001:5001"
      - "8080:8080"
    volumes:
      - ipfs_data:/data/ipfs
    command: daemon
    networks:
      - suzoo_net

  fastapi:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    container_name: suzoo_fastapi
    depends_on:
      ganache:
        condition: service_started
      ipfs:
        condition: service_started
    env_file:
      - .env
    expose:
      - "8000"
    networks:
      - suzoo_net

  express:
    build:
      context: ./express
      dockerfile: Dockerfile
    container_name: suzoo_express
    depends_on:
      postgres:
        condition: service_healthy
      ganache:
        condition: service_started
      ipfs:
        condition: service_started
      fastapi:
        condition: service_started
    env_file:
      - .env
    expose:
      - "3000"
    networks:
      - suzoo_net

  crawler:
    build:
      context: ./crawler
      dockerfile: Dockerfile
    container_name: suzoo_crawler
    depends_on:
      express:
        condition: service_started
      postgres:
        condition: service_started
    env_file:
      - .env
    networks:
      - suzoo_net
    expose:
      - "8081"

  react:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: suzoo_frontend
    depends_on:
      express:
        condition: service_started
      fastapi:
        condition: service_started
    env_file:
      - .env
    expose:
      - "3000"
    networks:
      - suzoo_net

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: suzoo_nginx
    depends_on:
      - react
      - express
      - fastapi
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped
    networks:
      - suzoo_net

networks:
  suzoo_net:
    driver: bridge

volumes:
  db_data:
  ipfs_data:
