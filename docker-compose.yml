# docker-compose.yml
# ----------------------------------------------
# 這裡我把 version 移除，避免出現 "the attribute `version` is obsolete" 警告
# ----------------------------------------------

services:
  # PostgreSQL
  suzoo_postgres:
    image: postgres:15-alpine
    container_name: suzoo_postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - suzoo_db_data:/var/lib/postgresql/data
    networks:
      - suzoo_net
    restart: unless-stopped

  # Ganache
  suzoo_ganache:
    image: trufflesuite/ganache-cli:latest
    container_name: suzoo_ganache
    command: >
      ganache-cli
      --host 0.0.0.0
      --port 8545
      --accounts 4
      --defaultBalanceEther 100
      --account "0x0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef,100000000000000000000"
    ports:
      - "8545:8545"
    networks:
      - suzoo_net
    restart: unless-stopped

  # IPFS
  suzoo_ipfs:
    image: ipfs/go-ipfs:latest
    container_name: suzoo_ipfs
    command: daemon
    ports:
      - "5001:5001"
      - "8080:8080"
    networks:
      - suzoo_net
    restart: unless-stopped

  # FastAPI
  suzoo_fastapi:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    container_name: suzoo_fastapi
    depends_on:
      - suzoo_postgres
      - suzoo_ganache
      - suzoo_ipfs
    env_file:
      - .env
    networks:
      - suzoo_net
    expose:
      - "8000"
    restart: unless-stopped

  # Express (重點修改處)
  suzoo_express:
    build:
      # 確定此 Dockerfile 路徑就是 express/ 裡的 Dockerfile
      context: ./express
      dockerfile: Dockerfile
    container_name: suzoo_express
    depends_on:
      - suzoo_postgres
      - suzoo_fastapi
    env_file:
      - .env
    networks:
      - suzoo_net
    # 這裡只 expose 3000, 因為我們要透過其他方式或反向代理連線
    expose:
      - "3000"
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
      - ./debugShots:/app/debugShots

  # Frontend (React + Nginx)
  suzoo_frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: suzoo_frontend
    depends_on:
      - suzoo_express
      - suzoo_fastapi
    env_file:
      - .env
    networks:
      - suzoo_net
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/nginx/certs:ro
      - ./frontend/suzoo.conf:/etc/nginx/conf.d/default.conf:ro
      - ./uploads:/app/uploads:ro
    restart: unless-stopped

  # ★★★ 新增 (A) => Milvus
  suzoo_milvus:
    image: milvusdb/milvus:v2.2.11
    container_name: suzoo_milvus
    ports:
      - "19530:19530"
    networks:
      - suzoo_net
    restart: unless-stopped
    volumes:
      - suzoo_milvus_data:/var/lib/milvus

  # ★★★ 新增 (B) => Python Towhee + Milvus Service
  suzoo_python_vector:
    build:
      context: ./python-vector-service
      dockerfile: Dockerfile
    container_name: suzoo_python_vector
    depends_on:
      - suzoo_milvus
    networks:
      - suzoo_net
    expose:
      - "8000"
    environment:
      - MILVUS_HOST=suzoo_milvus
      - MILVUS_PORT=19530
    restart: unless-stopped

networks:
  suzoo_net:
    driver: bridge

volumes:
  suzoo_db_data:
  suzoo_milvus_data:
