services:
  db:
    image: postgres:15
    container_name: suzoo_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # ==============================
  # 移除/放寬 geth 容器的 healthcheck
  # ==============================
  geth:
    build: ./geth
    container_name: suzoo_geth
    ports:
      - "8545:8545"
    volumes:
      - ./geth/genesis.json:/genesis.json
    command:
      - "--http"
      - "--http.addr"
      - "0.0.0.0"
      - "--http.port"
      - "8545"
      - "--http.api"
      - "eth,net,web3,personal"
      - "--nodiscover"
      - "--networkid"
      - "15"
    # 已移除 healthcheck

  ipfs:
    build: ./ipfs
    container_name: suzoo_ipfs
    ports:
      - "5001:5001"
    healthcheck:
      test: ["CMD", "ipfs", "id"]
      interval: 10s
      timeout: 5s
      retries: 5

  fastapi:
    build: ./fastapi
    container_name: suzoo_fastapi
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      geth:
        condition: service_started
    environment:
      - BLOCKCHAIN_RPC_URL=${BLOCKCHAIN_RPC_URL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  express:
    build: ./express
    container_name: suzoo_express
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      geth:
        condition: service_started
      fastapi:
        condition: service_healthy
    environment:
      - PORT=3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  crawler:
    build: ./crawler
    container_name: suzoo_crawler
    depends_on:
      express:
        condition: service_started
    environment:
      - RAPIDAPI_KEY=${RAPIDAPI_KEY}

  frontend:
    build: ./frontend
    container_name: suzoo_frontend
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production

  nginx:
    build: ./nginx
    container_name: suzoo_nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      express:
        condition: service_healthy
      fastapi:
        condition: service_healthy
      frontend:
        condition: service_started
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/wait-for-it.sh:/wait-for-it.sh
