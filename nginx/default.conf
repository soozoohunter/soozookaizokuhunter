# -------------------------
# 1) 定義 FastAPI Upstream
# -------------------------
# 若在 Docker Swarm / docker stack deploy，
# 會自動解析 fastapi_app 到多個容器
# 若單機 docker-compose --scale fastapi=3, 請手動列出多個 server
upstream fastapi_upstream {
    # 示例：一個容器
    server fastapi_app:8000;
    # 若有多個容器：
    # server fastapi_app1:8000;
    # server fastapi_app2:8000;
}

# -------------------------
# 2) HTTP(80) server block
# -------------------------
#   - 所有 HTTP 流量強制 301 跳轉到 HTTPS
server {
    listen 80;
    server_name yourdomain.com;

    # 可選：如果您需要透過80對外提供ACME驗證檔案(如Certbot續證)，
    # 可在此加 location /.well-known/acme-challenge/ { ... }
    # 但最簡單的做法是整個80都跳轉到443:
    return 301 https://$host$request_uri;
}

# -------------------------
# 3) HTTPS(443) server block
# -------------------------
server {
    listen 443 ssl http2;
    server_name yourdomain.com;

    # SSL 憑證 (Let’s Encrypt 或其他CA)
    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;

    # -------------------------
    # Express：路徑 /express/... → 代理到 express_app:3000
    # -------------------------
    location /express/ {
        # 移除 /express/ 前綴，以免後端讀不到正確路由
        rewrite ^/express/(.*) /$1 break;
        proxy_pass http://express_app:3000;
        # 您也可以在此設定更多 proxy_* 頭或超時設定
    }

    # -------------------------
    # FastAPI：路徑 /fastapi/... → 代理到 upstream
    # -------------------------
    location /fastapi/ {
        rewrite ^/fastapi/(.*) /$1 break;
        proxy_pass http://fastapi_upstream;
        # 同樣可加:
        # proxy_read_timeout 300;
        # proxy_send_timeout 300;
    }

    # ------------------------------------------------
    # 其他設定 (如一般靜態檔或根路徑) 視需求添加
    # ------------------------------------------------
    # location / {
    #     root /usr/share/nginx/html;
    #     index index.html index.htm;
    # }
}
