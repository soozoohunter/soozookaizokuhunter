# 1) HTTP 80 => 轉址至 HTTPS
server {
    listen 80;
    server_name suzookaizokuhunter.com www.suzookaizokuhunter.com;
    return 301 https://$host$request_uri;
}

# 2) HTTPS Server Block
server {
    listen 443 ssl;
    server_name suzookaizokuhunter.com www.suzookaizokuhunter.com;

    # 讓 nginx 使用 Docker 內建 DNS（127.0.0.11）解析容器 service name
    resolver 127.0.0.11 valid=30s;

    # 指定 Let’s Encrypt 憑證 (容器內路徑)
    ssl_certificate     /etc/letsencrypt/live/suzookaizokuhunter.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/suzookaizokuhunter.com/privkey.pem;

    # SSL相關設定
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # 反向代理到 React => suzoo_react:3000
    location / {
        proxy_pass http://suzoo_react:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # 反向代理到 Express => suzoo_express:3000
    location /api/node/ {
        proxy_pass http://suzoo_express:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # 反向代理到 FastAPI => suzoo_fastapi:8000
    location /api/py/ {
        proxy_pass http://suzoo_fastapi:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
