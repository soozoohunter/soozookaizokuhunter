worker_processes auto;
events {
    worker_connections 1024;
}

http {
    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 100M;

    # HTTP 強制跳轉 HTTPS
    server {
        listen 80;
        server_name suzookaizokuhunter.com www.suzookaizokuhunter.com;
        return 301 https://$host$request_uri;
    }

    # HTTPS 主配置
    server {
        listen 443 ssl http2;
        server_name suzookaizokuhunter.com www.suzookaizokuhunter.com;

        # SSL 證書 (已通過 Docker 掛載)
        ssl_certificate /etc/letsencrypt/live/suzookaizokuhunter.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/suzookaizokuhunter.com/privkey.pem;

        # 現代化 SSL 配置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256...';
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;

        # 路由優先級從最具體到最通用
        location /crawler/ {
            rewrite ^/crawler/(.*)$ /$1 break;
            proxy_pass http://crawler:8081;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /fastapi/ {
            rewrite ^/fastapi/(.*)$ /$1 break;
            proxy_pass http://fastapi:8000;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/ {
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://express:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # 前端路由 (最後處理)
        location / {
            proxy_pass http://frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            
            # 排除後端路徑
            location ~* ^/(api|fastapi|crawler|static) {
                proxy_pass http://frontend:80;
                proxy_intercept_errors on;
                error_page 404 = @no_frontend_fallback;
            }
        }

        # 自定義錯誤處理
        location @no_frontend_fallback {
            return 404 '{"error": "Endpoint not found"}';
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}
