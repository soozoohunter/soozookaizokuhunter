worker_processes auto;
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # 靜態文件緩存
    server {
        listen 80;
        server_name suzookaizokuhunter.com www.suzookaizokuhunter.com;

        # 前端靜態文件（方案 A）
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }

        # Express 反向代理（假設後端需要保留前綴）
        location /express {
            proxy_pass http://express:3000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # FastAPI 反向代理（移除前綴）
        location /fastapi {
            rewrite ^/fastapi(/.*)$ $1 break;
            proxy_pass http://fastapi:8000/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # 爬蟲服務代理
        location /crawler {
            rewrite ^/crawler(/.*)$ $1 break;
            proxy_pass http://crawler:8081/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # 靜態文件緩存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 365d;
            add_header Cache-Control "public, no-transform";
        }

        # 封鎖惡意路徑
        location ~* ^/(wp-admin|.git|.env) {
            deny all;
            return 404;
        }
    }
}
