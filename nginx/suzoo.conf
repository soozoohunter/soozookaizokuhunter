# 將 HTTP 80 埠自動轉向到 HTTPS（強制使用 SSL）
server {
    listen       80;
    server_name  suzookaizokuhunter.com;
    return 301 https://$host$request_uri;
}

# HTTPS 主服務
server {
    listen       443 ssl;
    server_name  suzookaizokuhunter.com;

    # SSL 憑證配置 (Let's Encrypt)
    ssl_certificate      /etc/letsencrypt/live/suzookaizokuhunter.com/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/suzookaizokuhunter.com/privkey.pem;
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  5m;
    ssl_protocols        TLSv1.2 TLSv1.3;
    ssl_ciphers          HIGH:!aNULL:!MD5;

    # **後端 FastAPI 服務: `/api/py/` 路徑代理**
    location /api/py/ {
        # 將請求轉發到 suzoo_fastapi 容器的 8000 埠
        proxy_pass http://suzoo_fastapi:8000/;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        # 可選：如 FastAPI 有其他子路徑，確保末尾有 "/" 以正確轉發路徑
    }

    # **後端 Express 服務: `/api/` 路徑代理**
    location /api/ {
        # 轉發其它 /api 請求到 suzoo_express 容器的 3000 埠
        proxy_pass http://suzoo_express:3000/;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    }

    # **前端 React SPA 服務: 靜態檔案或代理**
    location / {
        # 方法A：直接由Nginx提供靜態檔案（需將React build掛載至此容器）
        # root /app/build;
        # try_files $uri $uri/ /index.html =404;

        # 方法B：反向代理到React容器提供服務 (suzoo_react:3000)
        proxy_pass http://suzoo_react:3000;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    }
}
